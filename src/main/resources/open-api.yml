openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/widget/{id}:
    get:
      tags:
      - widget-controller
      operationId: getWidget
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/ValidationDto'
                - type: string
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WidgetRespDto'
    put:
      tags:
      - widget-controller
      operationId: updateWidget
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetReqDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/ValidationDto'
                - type: string
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WidgetRespDto'
    delete:
      tags:
      - widget-controller
      operationId: deleteWidget
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/ValidationDto'
                - type: string
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "204":
          description: No Content
  /api/v1/widget:
    get:
      tags:
      - widget-controller
      operationId: getAllWidgets
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: xPoint1
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: yPoint1
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: xPoint2
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: yPoint2
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/ValidationDto'
                - type: string
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WidgetRespDto'
    post:
      tags:
      - widget-controller
      operationId: createWidget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetReqDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: array
                  items:
                    $ref: '#/components/schemas/ValidationDto'
                - type: string
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WidgetRespDto'
components:
  schemas:
    ValidationDto:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    WidgetReqDto:
      required:
      - height
      - width
      type: object
      properties:
        id:
          type: integer
          format: int64
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        xpoint:
          type: integer
          format: int32
        ypoint:
          type: integer
          format: int32
        zindex:
          type: integer
          format: int32
    WidgetRespDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        modificationDate:
          type: string
          format: date-time
        xpoint:
          type: integer
          format: int32
        ypoint:
          type: integer
          format: int32
        zindex:
          type: integer
          format: int32
